// Generated by AI

package tools

import (
	"math/rand"
	"sort"
	"time"
)

func CreateDailyRandomTrigger(startHour, endHour, count int, fn func(), location *time.Location) func() {
	return func() {
		r := rand.New(rand.NewSource(time.Now().UnixNano()))

		for {
			now := time.Now().In(location)

			// 定义今天的起止时间
			start := time.Date(now.Year(), now.Month(), now.Day(), startHour, 0, 0, 0, location)
			end := time.Date(now.Year(), now.Month(), now.Day(), endHour, 0, 0, 0, location)

			// 如果现在已经超过 end，跳到下一天
			if now.After(end) {
				time.Sleep(time.Until(start.Add(24 * time.Hour)))
				continue
			}

			// 随机生成 count 个时间点（无论是否早于 now）
			var triggers []time.Time
			span := end.Sub(start)
			for i := 0; i < count; i++ {
				offset := time.Duration(r.Int63n(int64(span)))
				triggers = append(triggers, start.Add(offset))
			}

			// 排序时间点
			sort.Slice(triggers, func(i, j int) bool {
				return triggers[i].Before(triggers[j])
			})

			// 遍历触发点，跳过已过时间
			for _, t := range triggers {
				if t.After(time.Now().In(location)) {
					time.Sleep(time.Until(t))
					fn()
				}
			}

			// 等到明天
			nextStart := start.Add(24 * time.Hour)
			time.Sleep(time.Until(nextStart))
		}
	}
}
